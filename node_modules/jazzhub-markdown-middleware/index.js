/*
 * Tacks the markdown representation of a requested file to req.rendered_markdown
 * as long as a corresponding markdown file appears in the path, path.
 */

var marked = require('marked');
var path = require('path');
var fs = require('fs');

var compileMarkdown = function (file, callback) {
	if (req.dusted_markdown) {
		marked(req.dusted_markdown, function(err, content) {
			if (err) {
				callback(err); return;
			}

			callback(false, content); return;
		})
	}
	
	fs.readFile(file, 'utf8', function(err, data) {
		if (err) {
			callback(err); return;
		}

		marked(data, function (err, content) {
			if (err) {
				callback(err); return;
			}

			callback(false, content); return;
		});
	});
}

module.exports = function (doc_path) {
	return {
		file: function (req, res, next) {
			if (req.rendered_markdown)
				return next();

			var req_path = req.path;

			if (req_path.match(/\.md$/)) {
				req_path = req_path.replace(/\.md$/, '');
			}

			var markdown_path = path.join(doc_path, req_path) + '.md';

			compileMarkdown(markdown_path, function (err, content) {
				if (err)
					return next();

				req.rendered_markdown = content;
				return next();
			});
		},

		directory: function (req, res, next) {
			if (req.rendered_markdown)
				return next();

			var markdown_path = path.join(doc_path, req.path, 'index.md');

			compileMarkdown(markdown_path, function (err, content) {
				if (err)
					return next();

				req.rendered_markdown = content;
				return next();
			});
		}
	}
};
